{
    "swagger": "2.0",
    "info": {
        "description": "This is a documentation to communicate with Shejobs REST API.",
        "version": "1.0.0",
        "title": "Shejobs",
        "termsOfService": "http://shejobs.net/terms/",
        "contact": {
            "email": "api@shejobs.net"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "localhost:1337",
    "tags": [{
            "name": "site",
            "description": "Operations about general."
        },
        {
            "name": "account",
            "description": "Operations about account."
        },
        {
            "name": "users",
            "description": "Operations about users."
        },
        {
            "name": "employers",
            "description": "Operations about employers"
        },
        {
            "name": "admins",
            "description": "Operations about admins."
        },
        {
            "name": "subscription-plans",
            "description": "Operations about subscription plans."
        },
        {
            "name": "categories",
            "description": "Operations about categories."
        },
        {
            "name": "industries",
            "description": "Operations about industries."
        },
        {
            "name": "educations",
            "description": "Operations about educations."
        },
        {
            "name": "jobpostings",
            "description": "Operations about job postings."
        }
    ],
    "schemes": ["http", "https"],
    "paths": {
        "/site/health": {
            "get": {
                "tags": ["site"],
                "summary": "API health check.",
                "description": "This helps to check the working condition of the service.",
                "operationId": "health",
                "produces": ["application/json"],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/account/update-password": {
            "post": {
                "tags": ["account"],
                "summary": "Update user password. (User, Admin, Vendor)",
                "description": "This can help to update a current login user's login password.",
                "operationId": "updateuserpassword",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "current_password",
                        "type": "string",
                        "description": "Current password of the user.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "type": "string",
                        "description": "New password of the user.",
                        "required": true
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/account/request-reset-password": {
            "post": {
                "tags": ["account"],
                "summary": "Request reset password.",
                "description": "This can help to request a reset password link to email.",
                "operationId": "requestresetpassword",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "email",
                    "type": "string",
                    "description": "Email of the user.",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/account/reset-password": {
            "post": {
                "tags": ["account"],
                "summary": "Reset password.",
                "description": "This can help to update a current login user's login password using reset token.",
                "operationId": "updateuserpasswordusingtoken",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "id",
                        "type": "number",
                        "description": "Id of the user.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "token",
                        "type": "string",
                        "description": "Password reset token.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "type": "string",
                        "description": "New password of the user.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/account/verify": {
            "post": {
                "tags": ["account"],
                "summary": "Verify account.",
                "description": "This can help to verify user account email.",
                "operationId": "verifyuser",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "id",
                        "type": "number",
                        "description": "Id of the user.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "token",
                        "type": "string",
                        "description": "Password reset token.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/oauth/token": {
            "post": {
                "tags": ["users"],
                "summary": "Generate token by email.",
                "description": "This is used to generate token for a user via traditional email & password login.",
                "operationId": "generateToken",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "grant_type",
                        "type": "string",
                        "description": "Grant type for obtaining token type.",
                        "required": false,
                        "enum": ["password", "refresh_token"],
                        "defaultValue": "password"
                    },
                    {
                        "in": "formData",
                        "name": "client_id",
                        "type": "string",
                        "description": "Client id provided by admin to access the API.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "client_secret",
                        "type": "string",
                        "description": "Client secret provided by admin to access the API.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "username",
                        "type": "string",
                        "description": "Username for the login. Can be username, email, phone or user_handle.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "type": "string",
                        "description": "Password for the login.",
                        "required": false,
                        "minLength": 8
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/social-login": {
            "post": {
                "tags": ["users"],
                "summary": "Generate token by email.",
                "description": "This is used to generate token for a user via social login token such as google, facebook or linkedin.",
                "operationId": "generateUserSocialToken",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "type",
                        "type": "string",
                        "description": "Type",
                        "required": false,
                        "enum": ["google", "facebook", "linkedin"],
                        "defaultValue": "google"
                    },
                    {
                        "in": "formData",
                        "name": "token",
                        "type": "string",
                        "description": "Token obtained from respective social login OAuth api.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "client_id",
                        "type": "string",
                        "description": "Client id provided by admin to access the API.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "client_secret",
                        "type": "string",
                        "description": "Client secret provided by admin to access the API.",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/signup": {
            "post": {
                "tags": ["users"],
                "summary": "User signup",
                "description": "This can help to sign up a user based on their email and password.",
                "operationId": "usersignup",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "first_name",
                        "type": "string",
                        "description": "First name of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "last_name",
                        "type": "string",
                        "description": "Last name of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "phone",
                        "type": "number",
                        "description": "Mobile number of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "description": "Email of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "type": "string",
                        "description": "Password of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "location",
                        "type": "string",
                        "description": "Location geopoints of the user in lat,lng format (eg: 11.9312432,79.8342569).",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "location_text",
                        "type": "string",
                        "description": "Location text of the user.",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/check-user-handle/{user_handle}": {
            "get": {
                "tags": ["users"],
                "summary": "User handle check",
                "description": "This can help to check whether a user handle exists.",
                "operationId": "usercheckhandle",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "path",
                    "name": "user_handle",
                    "type": "string",
                    "description": "User handle of the user",
                    "required": false
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/list": {
            "get": {
                "tags": ["users"],
                "summary": "List users. (Admin)",
                "description": "This will list all users based on the input params.",
                "operationId": "listusers",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the user list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in user list. (ie: If you want to sort more than one attribute then it should be commma seperated string.) (eg: Ascending: `title.asc`. Descending: `title.desc`. Most Recent: `created_at.desc`. Most Popular: `most_popular.desc`.)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit the user list by specific value. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string",
                        "required": false,
                        "description": "Filters the user email or first_name & last_name."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "List the job posting by specific status value 0 or 1. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand the specific attribute in the job postings list. (eg: you can expand a city,account)."
                    },
                    {
                        "in": "query",
                        "name": "city",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Filters the user list by a specific city."
                    },
                    {
                        "in": "query",
                        "name": "job_types",
                        "type": "string",
                        "required": false,
                        "description": "Type of the user preferred_job_type. Can have multiple comma seperated values. (ie: Full Time: 0, Part Time: 1, Freelance: 2, Internship: 3, Temporary: 4, Remote: 5, Contract: 6, Day Job: 7)."
                    },
                    {
                        "in": "formData",
                        "name": "skill_tags",
                        "type": "string",
                        "description": "Filters the users list by skill tags. (ie: skill_tags input have to be a comma seperated string and each of the individual value should be greater than 0). eg: 1,10,2",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "min_salary",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the users list by min_salary. (ie: If max_salary attribute present in the query params then the min_salary must be lesser than max_salary value)."
                    },
                    {
                        "in": "query",
                        "name": "max_salary",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the users list by max_salary. (ie: If min_salary attribute present in the query params then the max_salary must be greater than min_salary value)."
                    },
                    {
                        "in": "query",
                        "name": "min_experience",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the list by user minimum experience. (ie: If max_experience attribute present in the query params then the min_experience must be lesser than max_experience value)."
                    },
                    {
                        "in": "query",
                        "name": "max_experience",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the list by user maximum experience. (ie: If min_experience attribute present in the query params then the max_experience must be greater than min_experience value)."
                    },
                    {
                        "in": "query",
                        "name": "skill_tags_filter_type",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "This field decide the input for `skill_tags` field. If this field value is 0 then user can pass a value to skill_tags attribute. If this field value is 1 then the value for skill_tags field will generated by api using the value of job_posting parameter. ie(job_posting parameter is required if the skill_tags_filter_type value is 1)"
                    },
                    {
                        "in": "query",
                        "name": "job_posting",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "This field helps to relate users list with jop_posting module by passing the jop_posting id."
                    },
                    {
                        "in": "query",
                        "name": "additional_fields",
                        "type": "string",
                        "description": "Adds additional column to users list. (ie: additional_fields input have to be a comma seperated string and each of the individual value can have one among these values `job_application`).",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/view/{id}": {
            "get": {
                "tags": ["users"],
                "summary": "View a User. (Any)",
                "description": "This will retrieve a single user details.",
                "operationId": "viewuserdetails",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the user.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand attributes in user."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/profile": {
            "get": {
                "tags": ["users"],
                "summary": "User profile. (User)",
                "description": "This is used to get profile information about the logged in user. Photo url can be found in the meta tags.",
                "operationId": "userprofile",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "expand",
                    "in": "query",
                    "description": "Expand values for additional information. Only can have values such as account,employments,educations,city,state,country. Can have comma seperated values as account,employments.",
                    "required": false,
                    "type": "string"
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/update": {
            "post": {
                "tags": ["users"],
                "summary": "User update. (User)",
                "description": "This can help to update a current login user's profile details.",
                "operationId": "userupdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "first_name",
                        "type": "string",
                        "description": "First name of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "last_name",
                        "type": "string",
                        "description": "Lastname name of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "bio",
                        "type": "string",
                        "description": "Bio of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "date_of_birth",
                        "type": "string",
                        "description": "Date of birth in DD/MM/YYYY format.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "about_info",
                        "type": "string",
                        "description": "About Info of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "city",
                        "type": "number",
                        "description": "City of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "zip_code",
                        "type": "number",
                        "description": "Zip code of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "certification",
                        "type": "string",
                        "description": "Certification for the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "social_networks",
                        "type": "object",
                        "properties": {},
                        "description": "Social network handles or url of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "location",
                        "type": "string",
                        "description": "Prefered location geopoints of the user in lat,lng format (eg: 11.9312432,79.8342569).",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "location_text",
                        "type": "string",
                        "description": "Prefered location text of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "location_miles",
                        "type": "number",
                        "description": "Prefered number of miles for the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "preferred_job_type",
                        "type": "number",
                        "description": "Prefered job timing type for the user. 0-Full Time, 1-Part Time, 2-Freelance, 3-Internship, 4-Temporary, 5-Remote, 6-Contract, 7-Day Job.",
                        "required": false,
                        "enum": [0, 1, 2, 3, 4, 5, 6, 7]
                    },
                    {
                        "in": "formData",
                        "name": "skill_tags",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "number" },
                        "description": "Skill tags of the user from educations/skill-tags.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "work_status",
                        "type": "string",
                        "description": "Work status for the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "work_experience",
                        "type": "number",
                        "description": "Years of work experience.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "expected_salary",
                        "type": "number",
                        "description": "Expected salary.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "social_profiles",
                        "type": "object",
                        "collectionFormat": "multi",
                        "properties": {
                            "facebook": {
                                "type": "string",
                                "example": "www.facebook.com/test"
                            },
                            "linkedin": {
                                "type": "string",
                                "example": "www.linkedin.com/test"
                            }
                        }
                    },
                    {
                        "in": "formData",
                        "name": "country_code",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "string" },
                        "description": "country code of the user phone numbers.",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/update-user-handle": {
            "post": {
                "tags": ["users"],
                "summary": "Update user handle. (User)",
                "description": "This can help to update a current login user's unique user handle.",
                "operationId": "updateuserhandle",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "user_handle",
                    "type": "string",
                    "description": "New user handle of the user.",
                    "required": false
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/update-email": {
            "post": {
                "tags": ["users"],
                "summary": "Update user email. (User)",
                "description": "This can help to update a current login user's contact email.",
                "operationId": "updateuseremail",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "current_password",
                        "type": "string",
                        "description": "Current password of the user.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "description": "New email of the user.",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/update-phone": {
            "post": {
                "tags": ["users"],
                "summary": "Update user phone. (User)",
                "description": "This can help to update a current login user's contact phone.",
                "operationId": "updateuserphone",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "phone",
                    "type": "string",
                    "description": "New phone of the user (ie: Have to be a valid US phone number, eg: 202-272-0167).",
                    "required": false
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/update-photo": {
            "post": {
                "tags": ["users"],
                "summary": "Update user photo. (User)",
                "description": "This can help to update a current login user's display photo.",
                "operationId": "updateuserphoto",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "photo",
                    "type": "file",
                    "description": "New display photo of the user.",
                    "required": false
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/update-doc-resume": {
            "post": {
                "tags": ["users"],
                "summary": "Update user doc resume. (User)",
                "description": "This can help to update a current user's doc resume.",
                "operationId": "updatedocresume",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "doc_resume",
                    "type": "file",
                    "description": "New doc resume of the user.",
                    "required": false
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/update-video-resume": {
            "post": {
                "tags": ["users"],
                "summary": "Update user video resume. (User)",
                "description": "This can help to update a current user's video resume.",
                "operationId": "updatevideoresume",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "video_resume",
                    "type": "file",
                    "description": "New video resume of the user.",
                    "required": false
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/employments/create": {
            "post": {
                "tags": ["users"],
                "summary": "Add employment record for user. (User)",
                "description": "This can help to add an employment record for any individual user.",
                "operationId": "useremploycreate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "title",
                        "type": "string",
                        "required": false,
                        "description": "Title of the job."
                    },
                    {
                        "in": "formData",
                        "name": "company",
                        "type": "string",
                        "required": false,
                        "description": "Company of the job."
                    },
                    {
                        "in": "formData",
                        "name": "location",
                        "type": "string",
                        "required": false,
                        "description": "Location of the job."
                    },
                    {
                        "in": "formData",
                        "name": "start_month",
                        "type": "number",
                        "required": false,
                        "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                        "description": "Start month of the job. 24 hours from 0-23."
                    },
                    {
                        "in": "formData",
                        "name": "start_year",
                        "type": "number",
                        "required": false,
                        "description": "Start year of the job. YYYY."
                    },
                    {
                        "in": "formData",
                        "name": "end_month",
                        "type": "number",
                        "required": false,
                        "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                        "description": "End month of the job. 24 hours from 0-23. Required if currently_working is false."
                    },
                    {
                        "in": "formData",
                        "name": "end_year",
                        "type": "number",
                        "required": false,
                        "description": "End year of the job. YYYY. Required if currently_working is false."
                    },
                    {
                        "in": "formData",
                        "name": "currently_working",
                        "type": "boolean",
                        "required": false,
                        "description": "Is the job the current one."
                    },
                    {
                        "in": "formData",
                        "name": "industry",
                        "type": "number",
                        "required": true,
                        "description": "Industry of the employment."
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "type": "number",
                        "description": "Employment type for the user. 0-Full Time, 1-Part Time, 2-Freelance, 3-Internship, 4-Temporary, 5-Remote, 6-Contract, 7-Day Job.",
                        "required": true,
                        "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                        "defaultValue": "password"
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/employments/update/{id}": {
            "post": {
                "tags": ["users"],
                "summary": "Update employment record for user. (User)",
                "description": "This can help to update an employment record for any individual user.",
                "operationId": "useremployupdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the employment.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "title",
                        "type": "string",
                        "required": false,
                        "description": "Title of the job."
                    },
                    {
                        "in": "formData",
                        "name": "company",
                        "type": "string",
                        "required": false,
                        "description": "Company of the job."
                    },
                    {
                        "in": "formData",
                        "name": "location",
                        "type": "string",
                        "required": false,
                        "description": "Location of the job."
                    },
                    {
                        "in": "formData",
                        "name": "start_month",
                        "type": "number",
                        "required": false,
                        "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                        "description": "Start month of the job. 24 hours from 0-23."
                    },
                    {
                        "in": "formData",
                        "name": "start_year",
                        "type": "number",
                        "required": false,
                        "description": "Start year of the job. YYYY."
                    },
                    {
                        "in": "formData",
                        "name": "end_month",
                        "type": "number",
                        "required": false,
                        "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
                        "description": "End month of the job. 24 hours from 0-23. Required if currently_working is false."
                    },
                    {
                        "in": "formData",
                        "name": "end_year",
                        "type": "number",
                        "required": false,
                        "description": "End year of the job. YYYY. Required if currently_working is false."
                    },
                    {
                        "in": "formData",
                        "name": "currently_working",
                        "type": "boolean",
                        "required": false,
                        "description": "Is the job the current one."
                    },
                    {
                        "in": "formData",
                        "name": "industry",
                        "type": "number",
                        "required": false,
                        "description": "Industry of the employment."
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "type": "number",
                        "description": "Employment type for the user. 0-Full Time, 1-Part Time, 2-Freelance, 3-Internship, 4-Temporary, 5-Remote, 6-Contract, 7-Day Job.",
                        "required": false,
                        "enum": [0, 1, 2, 3, 4, 5, 6, 7],
                        "defaultValue": "password"
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/user/employments/delete": {
            "post": {
                "tags": ["users"],
                "summary": "Delete employment records for user. (User)",
                "description": "This can help to delete various employment records for any individual user.",
                "operationId": "useremploydelete",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "ids",
                    "type": "array",
                    "collectionFormat": "multi",
                    "items": { "type": "number" },
                    "description": "Ids of the employments.",
                    "required": false
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/users/educations/create": {
            "post": {
                "tags": ["users"],
                "summary": "Add education record for user. (User)",
                "description": "This can help to add an education record for any individual user.",
                "operationId": "usereducationcreate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "grade",
                        "type": "string",
                        "required": false,
                        "description": "Grade obtained from the education."
                    },
                    {
                        "in": "formData",
                        "name": "max_grade",
                        "type": "string",
                        "required": false,
                        "description": "Maximum grade obtained for the education."
                    },
                    {
                        "in": "formData",
                        "name": "comments",
                        "type": "string",
                        "required": false,
                        "description": "Comments of the education."
                    },
                    {
                        "in": "formData",
                        "name": "start_year",
                        "type": "number",
                        "required": false,
                        "description": "Start year of the education. YYYY."
                    },
                    {
                        "in": "formData",
                        "name": "end_year",
                        "type": "number",
                        "required": false,
                        "description": "End year of the education. YYYY."
                    },
                    {
                        "in": "formData",
                        "name": "institution",
                        "type": "number",
                        "required": false,
                        "description": "Institution of the education."
                    },
                    {
                        "in": "formData",
                        "name": "degree",
                        "type": "number",
                        "required": false,
                        "description": "Degree of the education."
                    },
                    {
                        "in": "formData",
                        "name": "field",
                        "type": "number",
                        "required": false,
                        "description": "Field of the education."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/users/educations/update/{id}": {
            "post": {
                "tags": ["users"],
                "summary": "Update education record for user. (User)",
                "description": "This can help to update an education record for any individual user.",
                "operationId": "usereducationupdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the education.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "grade",
                        "type": "string",
                        "required": false,
                        "description": "Grade obtained from the education."
                    },
                    {
                        "in": "formData",
                        "name": "max_grade",
                        "type": "string",
                        "required": false,
                        "description": "Maximum grade obtained for the education."
                    },
                    {
                        "in": "formData",
                        "name": "comments",
                        "type": "string",
                        "required": false,
                        "description": "Comments of the education."
                    },
                    {
                        "in": "formData",
                        "name": "start_year",
                        "type": "number",
                        "required": false,
                        "description": "Start year of the education. YYYY."
                    },
                    {
                        "in": "formData",
                        "name": "end_year",
                        "type": "number",
                        "required": false,
                        "description": "End year of the education. YYYY."
                    },
                    {
                        "in": "formData",
                        "name": "institution",
                        "type": "number",
                        "required": false,
                        "description": "Institution of the education."
                    },
                    {
                        "in": "formData",
                        "name": "degree",
                        "type": "number",
                        "required": false,
                        "description": "Degree of the education."
                    },
                    {
                        "in": "formData",
                        "name": "field",
                        "type": "number",
                        "required": false,
                        "description": "Field of the education."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/user/educations/delete": {
            "post": {
                "tags": ["users"],
                "summary": "Delete education records for user. (User)",
                "description": "This can help to delete various education records for any individual user.",
                "operationId": "usereducationdelete",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "ids",
                    "type": "array",
                    "collectionFormat": "multi",
                    "items": { "type": "number" },
                    "description": "Ids of the educations.",
                    "required": false
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employers/signup": {
            "post": {
                "tags": ["employers"],
                "summary": "Sign up employers.",
                "description": "This will help to signup employee.",
                "operationId": "signupemployers",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "first_name",
                        "type": "string",
                        "required": true,
                        "description": "First name of employer"
                    },
                    {
                        "in": "formData",
                        "name": "last_name",
                        "type": "string",
                        "required": true,
                        "description": "Last name of employer"
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "required": true,
                        "description": "Email id of employer"
                    },
                    {
                        "in": "formData",
                        "name": "password",
                        "type": "string",
                        "required": true,
                        "description": "Password for account login"
                    },
                    {
                        "in": "formData",
                        "name": "company",
                        "type": "string",
                        "required": true,
                        "description": "Company of of employer"
                    }
                ],

                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employers/list": {
            "get": {
                "tags": ["employers"],
                "summary": "List employers. (Admin)",
                "description": "This will list all employers based on the input params.",
                "operationId": "listemployers",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the employer list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in employer list. (ie: If you want to sort more than one attribute then it should be commma seperated string.) (eg: Ascending: `title.asc`. Descending: `title.desc`. Most Recent: `created_at.desc`. Most Popular: `most_popular.desc`.)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit the employer list by specific value. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string",
                        "required": false,
                        "description": "Filters the employer email or first_name & last_name."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "List the job posting by specific status value 0 or 1. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand the specific attribute in the job postings list. (eg: you can expand a city,account)."
                    },
                    {
                        "in": "query",
                        "name": "company",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Filters the employer list by a searchable text of company."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employers/view/{id}": {
            "get": {
                "tags": ["employers"],
                "summary": "View a Employer. (Any)",
                "description": "This will retrieve a single employer details.",
                "operationId": "viewemployerdetails",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the employer.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand attributes in employer."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employers/profile": {
            "get": {
                "tags": ["employers"],
                "summary": "Employer profile. (Employer)",
                "description": "This is used to get profile information about the logged in employer. Photo url can be found in the meta tags.",
                "operationId": "employerprofile",
                "produces": ["application/json"],
                "parameters": [{
                    "name": "expand",
                    "in": "query",
                    "description": "Expand values for additional information. Only can have values such as account.",
                    "required": false,
                    "type": "string"
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employers/update": {
            "post": {
                "tags": ["employers"],
                "summary": "Employer update. (Employer,Admin)",
                "description": "This can help to update a current login employer's profile details.",
                "operationId": "employerupdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "id",
                        "type": "number",
                        "description": "Id of the employer (Only Admin).",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "company",
                        "type": "string",
                        "description": "Company of the employer.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "department",
                        "type": "string",
                        "description": "department of the employer.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "address_line_1",
                        "type": "string",
                        "description": "city of company.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "address_line_2",
                        "type": "string",
                        "description": "city of company.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "city",
                        "type": "string",
                        "description": "city of company.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "state",
                        "type": "string",
                        "description": "state of company.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "country_code",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "string" },
                        "description": "country code of the employer phone number.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "zipcode",
                        "type": "number",
                        "description": "zipcode of company.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "description": "description of company.",
                        "required": true
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/employers/update-email": {
            "post": {
                "tags": ["employers"],
                "summary": "Update employer email. (Employer)",
                "description": "This can help to update a current login employer's contact email.",
                "operationId": "updateemployeremail",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "current_password",
                        "type": "string",
                        "description": "Current password of the employer.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "type": "string",
                        "description": "New email of the employer.",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/employers/update-phone": {
            "post": {
                "tags": ["employers"],
                "summary": "Update employer phone. (Employer)",
                "description": "This can help to update a current login employer's contact phone.",
                "operationId": "updateemployerphone",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "phone",
                    "type": "string",
                    "description": "New phone of the employer (ie: Have to be a valid US phone number, eg: 202-272-0167).",
                    "required": false
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/employers/update-photo": {
            "post": {
                "tags": ["employers"],
                "summary": "Update employer photo. (Employer)",
                "description": "This can help to update a current login employer's display photo.",
                "operationId": "updateemployerphoto",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "photo",
                    "type": "file",
                    "description": "New display photo of the employer.",
                    "required": false
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/employers/change-status/{id}": {
            "post": {
                "tags": ["employers"],
                "summary": "Change status of a employers. (Admin)",
                "description": "This will change status of a specific employer.",
                "operationId": "changeStatusemployers",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the employer.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": true,
                        "description": "Status of the employer. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active."
                    },
                    {
                        "in": "formData",
                        "name": "status_glossary",
                        "type": "string",
                        "description": "Info about status change.",
                        "required": true
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/employers/approach-job-seeker": {
            "post": {
                "tags": ["employers"],
                "summary": "This end-point helps to approach a jobseeker for a specific job. (Emplyer)",
                "description": "Will approach a jobseeker for a specific job. By sending email invitation",
                "operationId": "employerApproachJobseeker",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "job_posting",
                        "type": "number",
                        "minimum": 1,
                        "description": "Id of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "user",
                        "type": "number",
                        "minimum": 1,
                        "description": "Id of the user.",
                        "required": true

                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/create": {
            "post": {
                "tags": ["jobpostings"],
                "summary": "Job postings create. (Employer)",
                "description": "This can help to create a job postings.",
                "operationId": "createjobpostings",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "title",
                        "type": "string",
                        "description": "Title of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "type": "number",
                        "description": "Prefered job timing type for the user. 0-Full Time, 1-Part Time, 2-Freelance, 3-Internship, 4-Temporary, 5-Remote, 6-Contract, 7-Day Job.",
                        "required": true,
                        "enum": [0, 1, 2, 3, 4, 5, 6, 7]
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "description": "Details of job",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "salary_type",
                        "type": "number",
                        "description": "salary type . 0-Hourly ,1-Annual",
                        "required": true,
                        "enum": [0, 1]
                    },
                    {
                        "in": "formData",
                        "name": "salary_currency",
                        "type": "number",
                        "description": "Salary currency,0-us,1-inr,2-euro",
                        "required": true,
                        "enum": [0, 1, 2]
                    },
                    {
                        "in": "formData",
                        "name": "salary",
                        "type": "number",
                        "description": "Salary for this job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "city",
                        "type": "string",
                        "description": "city of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "state",
                        "type": "string",
                        "description": "city of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "country",
                        "type": "string",
                        "description": "Country of job",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "zipcode",
                        "type": "number",
                        "description": "zipcode of job.",
                        "required": true
                    },

                    {
                        "in": "formData",
                        "name": "availability",
                        "type": "string",
                        "description": "Availability of employee to join",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "remote",
                        "type": "boolean",
                        "description": "Ready to work from Remote.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "experience",
                        "type": "number",
                        "description": "Year of experience .",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "sap_experience",
                        "type": "number",
                        "description": "experience in sap domain",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "latlng",
                        "type": "string",
                        "description": "Lat,lang",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "domain",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "number" },
                        "description": "domain for the job. (Category api)",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "hands_on_experience",
                        "type": "object",
                        "collectionFormat": "multi",
                        "items": {
                            "type": "object",
                            "properties": {
                                "domain": {
                                    "type": "string",
                                    "description": "name of the domain eg:sap"
                                },
                                "experience": {
                                    "type": "number",
                                    "description": "Experience"
                                }
                            }
                        },
                        "description": "Hands_on_experience eg [ {domain:'domain-name',experience:1},{domain:'domain-name',experience:1} ]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "skills",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "number" },
                        "description": "skills (skill api )",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "programming_skills",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "string" },
                        "description": "programming_skills of job example:[jquery]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "optinal_skills",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "string" },
                        "description": "Nice to have skill of job example:[jquery]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "certification",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "string" },
                        "description": "certification for job example:[sap-certificate]",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "work_authorization",
                        "type": "number",
                        "description": "work_authorization 0-Should be a Citizen / PR, 1-Should be having a Work Permit",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "visa_sponsorship",
                        "type": "boolean",
                        "description": "visa_sponsorship ",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "end_to_end_implementation",
                        "type": "number",
                        "description": "end_to_end_implementation ",
                        "required": true
                    }



                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/jobpostings/list": {
            "get": {
                "tags": ["jobpostings"],
                "summary": "List job postings. (Any Role)",
                "description": "This will list all job postings based on the input params.",
                "operationId": "listjobpostings",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the job postings list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in job postings list. (ie: If you want to sort more than one attribute then it should be commma seperated string.) (eg: Ascending: `title.asc`. Descending: `title.desc`. Most Recent: `created_at.desc`. Most Popular: `most_popular.desc`.)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit the job postings list by specific value. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string",
                        "required": false,
                        "description": "Filters the job postings list by the skill tags or job title."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "List the job posting by specific status value 0 or 1. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand the specific attribute in the job postings list. (eg: you can expand a city, category and employer attribute by giving city,category,employer in the expand input. By which you get all the properties of each attributes)."
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "string",
                        "required": false,
                        "description": "Input value has to be a comma seperated integer with any of the following values. (ie: Full Time: 0, Part Time: 1, Freelance: 2, Internship: 3, Temporary: 4, Remote: 5, Contract: 6, Day Job: 7)."
                    },
                    {
                        "in": "formData",
                        "name": "skill_tags",
                        "type": "string",
                        "description": "Filters the job postings list by skill tags. (ie: skill_tags input have to be a comma spearated ineteger and each of the individual value should be greater than 0). (eg: [1,10,2]).",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "min_salary",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the job posting list by min_salary. (ie: If max_salary attribute present in the query params then the min_salary must be lesser than max_salary value)."
                    },
                    {
                        "in": "query",
                        "name": "max_salary",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the job posting list by max_salary. (ie: If min_salary attribute present in the query params then the max_salary must be greater than min_salary value)."
                    },
                    {
                        "in": "query",
                        "name": "min_experience",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the job posting list by min_experience. (ie: If max_experience attribute present in the query params then the min_experience must be lesser than max_experience value)."
                    },
                    {
                        "in": "query",
                        "name": "max_experience",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the job posting list by max_experience. (ie: If min_experience attribute present in the query params then the max_experience must be greater than min_experience value)."
                    },
                    {
                        "in": "query",
                        "name": "category",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Filters the job postings list by a specific category."
                    },
                    {
                        "in": "query",
                        "name": "city",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Filters the job postings list by a specific city."
                    },
                    {
                        "in": "query",
                        "name": "alphabet",
                        "type": "string",
                        "required": false,
                        "description": "Filters the job postings list by the title that starts with the specific given alphabet. (ie: The input should be a letter between (a to z)."
                    },
                    {
                        "in": "query",
                        "name": "additional_fields",
                        "type": "string",
                        "description": "Adds additional column to jobpostings list. (ie: additional_fields input have to be a comma seperated string and each of the individual value can have one among these values `applications_count`).",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/view/{id}": {
            "get": {
                "tags": ["jobpostings"],
                "summary": "View a posted job. (Any Role)",
                "description": "This will retrieve a single posted job details.",
                "operationId": "viewjobpostings",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the posted job.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand attributes in posted job. (ie: Have to be a comma separated string if you want expand more than one attribute. Available attributes to expand `city`, `category`, `employer`). (eg: [attribute_name],[attribute_name])."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/update/{id}": {
            "post": {
                "tags": ["jobpostings"],
                "summary": "Job postings update. (Employer)",
                "description": "This can help to update a job postings.",
                "operationId": "updatejobpostings",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the job posting.",
                        "required": true
                    }, {
                        "in": "formData",
                        "name": "title",
                        "type": "string",
                        "description": "Title of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "type": "number",
                        "description": "Prefered job timing type for the user. 0-Full Time, 1-Part Time, 2-Freelance, 3-Internship, 4-Temporary, 5-Remote, 6-Contract, 7-Day Job.",
                        "required": true,
                        "enum": [0, 1, 2, 3, 4, 5, 6, 7]
                    },
                    {
                        "in": "formData",
                        "name": "min_salary",
                        "type": "number",
                        "description": "Min salary of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "max_salary",
                        "type": "number",
                        "description": "Max salary of the user.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "min_experience",
                        "type": "number",
                        "description": "Min experience of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "max_experience",
                        "type": "number",
                        "description": "Max experience of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "company",
                        "type": "string",
                        "description": "Company of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "email",
                        "type": "number",
                        "description": "Email of the company.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "phone_numbers",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "number" },
                        "description": "Phone numbers of the company.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "company_bio",
                        "type": "string",
                        "description": "Bio of the company.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "company_website",
                        "type": "string",
                        "description": "Website of the company.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "location",
                        "type": "string",
                        "description": "Location geopoints of the job in lat,lng format (eg: 11.9312432,79.8342569).",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "location_text",
                        "type": "string",
                        "description": "location text of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "zip_code",
                        "type": "number",
                        "description": "Zip code of the job.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "city",
                        "type": "number",
                        "description": "City of the job.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "responsibilities",
                        "type": "string",
                        "description": "Responsibilities of the job.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "company_established",
                        "type": "number",
                        "description": "Year of company established. eg: 1991.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "company_employees",
                        "type": "number",
                        "description": "No of people currently working in the company. eg: 1500.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "company_branches",
                        "type": "number",
                        "description": "No of branches for the company. eg: 11.",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "skill_requirements",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "string" },
                        "description": "Skill requirement for the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "skill_tags",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "number" },
                        "description": "Skill tags of the job from educations/skill-tags.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "category",
                        "type": "number",
                        "description": "Category of the job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "company_social_profiles",
                        "type": "object",
                        "collectionFormat": "multi",
                        "properties": {
                            "facebook": {
                                "type": "string",
                                "example": "www.facebook.com/test"
                            },
                            "linkedin": {
                                "type": "string",
                                "example": "www.linkedin.com/test"
                            }
                        }
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/jobpostings/change-status/{id}": {
            "post": {
                "tags": ["jobpostings"],
                "summary": "Change status of a posted job. (Employer)",
                "description": "This will change status of a specific posted job.",
                "operationId": "changeStatusjobpostings",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the posted job.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": true,
                        "description": "Status of the posted job. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active."
                    },
                    {
                        "in": "formData",
                        "name": "status_glossary",
                        "type": "string",
                        "description": "Info about status change.",
                        "required": true
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/apply": {
            "post": {
                "tags": ["jobpostings"],
                "summary": "Apply for a job posting. (User)",
                "description": "This will help to create an appliction for a posted job.",
                "operationId": "jobpostingapply",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "job_posting",
                        "type": "string",
                        "description": "Id of the job posting.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "comments",
                        "type": "string",
                        "description": "Any comments if needed about the applications.",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/delete": {
            "post": {
                "tags": ["jobpostings"],
                "summary": "Delete a posted job. (Employer)",
                "description": "This will delete a single or set of posted job.",
                "operationId": "deletejobpostings",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "ids",
                    "type": "array",
                    "collectionFormat": "multi",
                    "items": { "type": "number" },
                    "description": "Ids of the posted jobs.",
                    "required": true
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/applications/list": {
            "get": {
                "tags": ["jobpostings"],
                "summary": "List job posting applications. (Employer,Admin)",
                "description": "This will list all job posting applications based on the input params.",
                "operationId": "listjobpostingsapplications",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the job postings list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in job postings list. (ie: If you want to sort more than one attribute then it should be commma seperated string.) (eg: Ascending: `title.asc`. Descending: `title.desc`. Most Recent: `created_at.desc`. Most Popular: `most_popular.desc`.)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit the job postings list by specific value. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "List the job posting by specific status value 0 or 1. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "required": false,
                        "description": "Expand the specific attribute in the job postings list. (eg: you can expand a job_posting, user and employer attribute by giving city,category,employer in the expand input. By which you get all the properties of each attributes)."
                    },
                    {
                        "in": "query",
                        "name": "employer",
                        "type": "string",
                        "required": false,
                        "description": "Employer of the job posting."
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "type": "string",
                        "required": false,
                        "description": "User of the job posting."
                    },
                    {
                        "in": "query",
                        "name": "job_posting",
                        "type": "string",
                        "required": false,
                        "description": "Id of the job posting."
                    },
                    {
                        "in": "query",
                        "name": "short_listed",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "0 defines job seekers who are not short listed and 1 defines job seekers who are short listed."
                    },
                    {
                        "in": "query",
                        "name": "job_types",
                        "type": "string",
                        "required": false,
                        "description": "Type of the user preferred_job_type. Can have multiple comma se[perated values. (ie: Full Time: 0, Part Time: 1, Freelance: 2, Internship: 3, Temporary: 4, Remote: 5, Contract: 6, Day Job: 7)."
                    },
                    {
                        "in": "formData",
                        "name": "skill_tags",
                        "type": "array",
                        "collectionFormat": "multi",
                        "items": { "type": "number" },
                        "description": "Filters the job postings list by skill tags. (ie: skill_tags input have to be a array and each of the individual value should be greater than 0). (eg: [1,10,2]).",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "min_salary",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the job posting list by min_salary. (ie: If max_salary attribute present in the query params then the min_salary must be lesser than max_salary value)."
                    },
                    {
                        "in": "query",
                        "name": "max_salary",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the job posting list by max_salary. (ie: If min_salary attribute present in the query params then the max_salary must be greater than min_salary value)."
                    },
                    {
                        "in": "query",
                        "name": "min_experience",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the job posting list by user minimum experience. (ie: If max_experience attribute present in the query params then the min_experience must be lesser than max_experience value)."
                    },
                    {
                        "in": "query",
                        "name": "max_experience",
                        "type": "number",
                        "minimum": 0,
                        "required": false,
                        "description": "Filters the job posting list by user maximum experience. (ie: If min_experience attribute present in the query params then the max_experience must be greater than min_experience value)."
                    },
                    {
                        "in": "query",
                        "name": "alphabet",
                        "type": "string",
                        "required": false,
                        "description": "Filters the user by the name that starts with the specific given alphabet. (ie: The input should be a letter between (a to z)."
                    },
                    {
                        "in": "query",
                        "name": "detail_fields",
                        "required": false,
                        "description": "Expand the detailed field expand attribute in the job postings list. (eg: you can expand a skill_tags)."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/applications/list-for-user": {
            "get": {
                "tags": ["jobpostings"],
                "summary": "List job posting applications. (User)",
                "description": "This will list all job posting applications based on the input params.",
                "operationId": "listjobpostingsapplications",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the job postings list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in job postings list. (ie: If you want to sort more than one attribute then it should be commma seperated string.) (eg: Ascending: `title.asc`. Descending: `title.desc`. Most Recent: `created_at.desc`. Most Popular: `most_popular.desc`.)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit the job postings list by specific value. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "List the job posting by specific status value 0 or 1. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand the specific attribute in the job postings list. (eg: you can expand a job_posting, user and employer attribute by giving city,category,employer in the expand input. By which you get all the properties of each attributes)."
                    },
                    {
                        "in": "query",
                        "name": "employer",
                        "type": "string",
                        "required": false,
                        "description": "Employer of the job posting."
                    },
                    {
                        "in": "query",
                        "name": "user",
                        "type": "string",
                        "required": false,
                        "description": "User of the job posting."
                    },
                    {
                        "in": "query",
                        "name": "job_posting",
                        "type": "string",
                        "required": false,
                        "description": "Id of the job posting."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/applications/view/{id}": {
            "get": {
                "tags": ["jobpostings"],
                "summary": "View a posted job. (Employer,Admin)",
                "description": "This will retrieve a single posted job details.",
                "operationId": "viewjobpostingsapplications",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the posted job applications.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand attributes in posted job. (ie: Have to be a comma separated string if you want expand more than one attribute. Available attributes to expand `job_posting`, `user`, `employer`). (eg: [attribute_name],[attribute_name])."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/applications/view-for-user/{id}": {
            "get": {
                "tags": ["jobpostings"],
                "summary": "View a posted job. (User)",
                "description": "This will retrieve a single posted job details.",
                "operationId": "viewjobpostingsapplications",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the posted job applications.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand attributes in posted job. (ie: Have to be a comma separated string if you want expand more than one attribute. Available attributes to expand `job_posting`, `user`, `employer`). (eg: [attribute_name],[attribute_name])."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/applications/change-status/{id}": {
            "post": {
                "tags": ["jobpostings"],
                "summary": "Change status of a posted job applications. (Employer)",
                "description": "This will change status of a specific posted job applications.",
                "operationId": "changeStatusjobpostingsapplications",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the posted job applications.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": true,
                        "description": "Status of the posted job applications. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active."
                    },
                    {
                        "in": "formData",
                        "name": "status_glossary",
                        "type": "string",
                        "description": "Info about status change.",
                        "required": true
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/jobpostings/applications/short-list-user/{id}": {
            "post": {
                "tags": ["jobpostings"],
                "summary": "This api helps to edit shorlisted field of a posted job applications. (Employer)",
                "description": "This will add or remove a job seeker from a posted job applications.",
                "operationId": "shortListUserJobpostingsApplications",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the posted job applications.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "short_listed",
                        "type": "number",
                        "enum": [true, false],
                        "required": true,
                        "description": "value can be either true or false. true will add job seeker to shorlist and false will remove job seeker from shortlist."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/subscription-plans/create": {
            "post": {
                "tags": ["subscription-plans"],
                "summary": "Create a subscription plan. (Admin)",
                "description": "This will create a new subscription plan in stripe.",
                "operationId": "subscription-planCreate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "amount",
                        "type": "number",
                        "required": true,
                        "description": "Amount of the subscription plan. A positive integer in paise (or 0 for a free plan) representing how much to charge on a recurring basis."
                    },
                    {
                        "in": "formData",
                        "name": "currency",
                        "type": "string",
                        "required": true,
                        "description": "Currency of the subscription plan. Three-letter ISO currency code, in lowercase. Must be a supported currency."
                    },
                    {
                        "in": "formData",
                        "name": "interval",
                        "type": "string",
                        "required": true,
                        "description": "Interval of the subscription plan. Specifies billing frequency. Either day, week, month or year."
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the subscription plan. Name of the plan"
                    },
                    {
                        "in": "formData",
                        "name": "interval_count",
                        "type": "number",
                        "required": true,
                        "description": "Interval count of the subscription plan. (ie: if interval is month and interval_count said to be 2 then for ever two month the subscription will be take place)."
                    },
                    {
                        "in": "formData",
                        "name": "interval_validity",
                        "type": "number",
                        "required": true,
                        "description": "Interval validity of the subscription plan. (ie: interval_validity should be greater than interval_count and interval_validity should be divisble by interval_count. For eg: if interval_count is 2. Then interval_validity can be 4,6 or any value that is divisible by 2)."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/subscription-plans/list": {
            "get": {
                "tags": ["subscription-plans"],
                "summary": "List subscription plans. (User, Admin)",
                "description": "This will list all subscription plans based on the input params.",
                "operationId": "subscription-planList",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the subscription plans list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in subscription plans list. (ie: Have to be a comma separated string) (eg: [attribute_name].asc,[attribute_name].desc)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit of the subscription plans list. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string",
                        "required": false,
                        "description": "Filters the subscription plans list by the attribute name."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "Status of the subscription plan list. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/subscription-plans/view/{id}": {
            "get": {
                "tags": ["subscription-plans"],
                "summary": "View a subscription plan. (User, Admin)",
                "description": "This will retrieve a single subscription plan details.",
                "operationId": "subscription-planView",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "description": "Id of the subscription plan.",
                    "required": true
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/subscription-plans/update/{id}": {
            "post": {
                "tags": ["subscription-plans"],
                "summary": "Update a subscription plan. (Admin)",
                "description": "This will update a single subscription plan details.",
                "operationId": "subscription-planUpdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the subscription plan.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the subscription plan."
                    },
                    {
                        "in": "formData",
                        "name": "interval_validity",
                        "type": "number",
                        "required": false,
                        "description": "Interval validity of the subscription plan. (ie: interval_validity should be greater than interval_count and interval_validity should be divisble by interval_count. For eg: if interval_count is 2. Then interval_validity can be 4,6 or any value that is divisible by 2)."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/subscription-plans/change-status/{id}": {
            "post": {
                "tags": ["subscription-plans"],
                "summary": "Change status of a subscription plan. (Admin)",
                "description": "This will change status of a specific subscription plan.",
                "operationId": "subscription-planChange-status",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the subscription plan.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": true,
                        "description": "Status of the subscription plan. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active."
                    },
                    {
                        "in": "formData",
                        "name": "status_glossary",
                        "type": "string",
                        "description": "Info about status change. (ie: status_glossary is optional only if the field:{status} is said to be 1).",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/subscription-plans/delete/{id}": {
            "post": {
                "tags": ["subscription-plans"],
                "summary": "Delete a subscription plan. (Admin)",
                "description": "This will delete a specific subscription plan.",
                "operationId": "subscription-planDelete",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "description": "Id of the subscription plan.",
                    "required": true
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/categories/create": {
            "post": {
                "tags": ["categories"],
                "summary": "Create a category. (Admin)",
                "description": "This will create a new category.",
                "operationId": "categoryCreate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the category."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the category."
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "Type of the category. Type can be either 0 or 1. Here 0 represent main category and 1 represent sub category."
                    },
                    {
                        "in": "formData",
                        "name": "parent",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "This field will be required only if the field:{type} is said to be 1 (sub category)"
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/categories/list": {
            "get": {
                "tags": ["categories"],
                "summary": "List categories.",
                "description": "This will list all categories based on the input params.",
                "operationId": "categoryList",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the categories list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in categories list. (ie: Have to be a comma separated string) (eg: [attribute_name].asc,[attribute_name].desc)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit of the categories list. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string",
                        "required": false,
                        "description": "Filters the categories list by the attribute name."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "Status of the categories list. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand attributes in categories list. Available values parent, jobs_count (ie: Have to be a comma separated string) (eg: [attribute_name],[attribute_name])."
                    },
                    {
                        "in": "query",
                        "name": "type",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "Type of the categories list. Type can be either 0 or 1. Here 0 represent main category and 1 represent sub category. (ie: By default the list contains both main category and sub category.)"
                    },
                    {
                        "in": "query",
                        "name": "parent",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Will list all sub category of a main category."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/categories/view/{id}": {
            "get": {
                "tags": ["categories"],
                "summary": "View a category plan.",
                "description": "This will retrieve a single category details.",
                "operationId": "categoryView",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the category.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand attributes in category. (ie: Have to be a comma separated string if you want expand more than one attribute. Available attributes to expand `parent`). (eg: [attribute_name],[attribute_name])."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/categories/update/{id}": {
            "post": {
                "tags": ["categories"],
                "summary": "Update a category. (Admin)",
                "description": "This will update a single category details.",
                "operationId": "categoryUpdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the category.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the category."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the category."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/categories/change-status/{id}": {
            "post": {
                "tags": ["categories"],
                "summary": "Change status of a category. (Admin)",
                "description": "This will change status of a specific category.",
                "operationId": "categoryChange-status",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the category.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": true,
                        "description": "Status of the category. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active."
                    },
                    {
                        "in": "formData",
                        "name": "status_glossary",
                        "type": "string",
                        "description": "Info about status change. (ie: status_glossary is optional only if the institution:{status} is said to be 1).",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/categories/update-photo/{id}": {
            "post": {
                "tags": ["categories"],
                "summary": "Update category photo. (Admin)",
                "description": "This will update the category photo.",
                "operationId": "categoryUpdate-photo",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the category.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "photo",
                        "type": "file",
                        "description": "New display photo of the category.",
                        "required": true
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/categories/delete": {
            "post": {
                "tags": ["categories"],
                "summary": "Delete a category. (Admin)",
                "description": "This will delete a single or set of (main or sub) category.",
                "operationId": "categoryDelete",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "ids",
                    "type": "array",
                    "collectionFormat": "multi",
                    "items": { "type": "number" },
                    "description": "Ids of the category. Ids can be a combination of both main and sub categories (eg: [1,12,10]).",
                    "required": true
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },

        "/industries/create": {
            "post": {
                "tags": ["industries"],
                "summary": "Create a industry. (Category)",
                "description": "This will create a new industry.",
                "operationId": "industryCreate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the industry."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the industry."
                    },
                    {
                        "in": "formData",
                        "name": "type",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "Type of the industry. Type can be either 0 or 1. Here 0 represent main industry and 1 represent sub industry."
                    },
                    {
                        "in": "formData",
                        "name": "parent",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "This field will be required only if the field:{type} is said to be 1 (sub category)"
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/industries/list": {
            "get": {
                "tags": ["industries"],
                "summary": "List industries. (Category)",
                "description": "This will list all industries based on the input params.",
                "operationId": "industryList",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the industries list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in industries list. (ie: Have to be a comma separated string) (eg: [attribute_name].asc,[attribute_name].desc)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit of the industries list. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string",
                        "required": false,
                        "description": "Filters the industries list by the attribute name."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "Status of the industries list. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/industries/view/{id}": {
            "get": {
                "tags": ["industries"],
                "summary": "View a industry plan. (Category)",
                "description": "This will retrieve a single industry details.",
                "operationId": "industryView",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the industry.",
                        "required": true
                    },
                    {
                        "in": "query",
                        "name": "expand",
                        "type": "string",
                        "required": false,
                        "description": "Expand attributes in industry. (ie: Have to be a comma separated string) (eg: [attribute_name],[attribute_name])."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/industries/update/{id}": {
            "post": {
                "tags": ["industries"],
                "summary": "Update a industries. (Category)",
                "description": "This will update a single industries details.",
                "operationId": "industriesUpdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the industries.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the industries."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the industries."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/industries/update-photo": {
            "post": {
                "tags": ["industries"],
                "summary": "Update industries photo. (User)",
                "description": "This will update the industries photo.",
                "operationId": "industriesUpdate-photo",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "photo",
                    "type": "file",
                    "description": "New display photo of the industries.",
                    "required": true
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success."
                    },
                    "400": {
                        "description": "Bad request."
                    },
                    "401": {
                        "description": "Unauthorized."
                    },
                    "403": {
                        "description": "You don't have permission to perform this action."
                    },
                    "500": {
                        "description": "Internal server error."
                    }
                }
            }
        },
        "/educations/fields/create": {
            "post": {
                "tags": ["educations"],
                "summary": "Create a education field. (Admin)",
                "description": "This will create a new education field.",
                "operationId": "educationFieldCreate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the education field."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the education field."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/fields/list": {
            "get": {
                "tags": ["educations"],
                "summary": "List education fields.",
                "description": "This will list all education fields based on the input params.",
                "operationId": "educationFieldList",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the education fields list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in education fields list. (ie: Have to be a comma separated string) (eg: [attribute_name].asc,[attribute_name].desc)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit of the education fields list. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string",
                        "required": false,
                        "description": "Filters the education fields list by the attribute name."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "Status of the education fields list. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/fields/view/{id}": {
            "get": {
                "tags": ["educations"],
                "summary": "View a education field.",
                "description": "This will retrieve a single education field details.",
                "operationId": "educationFieldView",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "description": "Id of the education field.",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/fields/update/{id}": {
            "post": {
                "tags": ["educations"],
                "summary": "Update a education field. (Admin)",
                "description": "This will update a single education field details.",
                "operationId": "educationFieldUpdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the education field.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the education field."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the education field."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/fields/change-status/{id}": {
            "post": {
                "tags": ["educations"],
                "summary": "Change status of a education field. (Admin)",
                "description": "This will change status of a specific education field.",
                "operationId": "educationFieldChange-status",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the education field.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": true,
                        "description": "Status of the education field. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active."
                    },
                    {
                        "in": "formData",
                        "name": "status_glossary",
                        "type": "string",
                        "description": "Info about status change. (ie: status_glossary is optional only if the field:{status} is said to be 1).",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/fields/delete": {
            "post": {
                "tags": ["educations"],
                "summary": "Delete a education field. (Admin)",
                "description": "This will delete a single or set of education field.",
                "operationId": "educationFieldDelete",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "ids",
                    "type": "array",
                    "collectionFormat": "multi",
                    "items": { "type": "number" },
                    "description": "Ids of the education field.",
                    "required": true
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/degrees/create": {
            "post": {
                "tags": ["educations"],
                "summary": "Create a education degree. (Admin)",
                "description": "This will create a new education degree.",
                "operationId": "educationDegreeCreate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the education degree."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the education degree."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/degrees/list": {
            "get": {
                "tags": ["educations"],
                "summary": "List education degrees.",
                "description": "This will list all education degrees based on the input params.",
                "operationId": "educationDegreeList",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the education degrees list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in education degrees list. (ie: Have to be a comma separated string) (eg: [attribute_name].asc,[attribute_name].desc)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit of the education degrees list. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string",
                        "required": false,
                        "description": "Filters the education degrees list by the attribute name."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "Status of the education degrees list. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/degrees/view/{id}": {
            "get": {
                "tags": ["educations"],
                "summary": "View a education degree.",
                "description": "This will retrieve a single education degree details.",
                "operationId": "educationDegreeView",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "description": "Id of the education degree.",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/degrees/update/{id}": {
            "post": {
                "tags": ["educations"],
                "summary": "Update a education degree. (Admin)",
                "description": "This will update a single education degree details.",
                "operationId": "educationDegreeUpdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the education degree.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the education degree."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the education degree."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/degrees/change-status/{id}": {
            "post": {
                "tags": ["educations"],
                "summary": "Change status of a education degree. (Admin)",
                "description": "This will change status of a specific education degree.",
                "operationId": "educationDegreeChange-status",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the education degree.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": true,
                        "description": "Status of the education degree. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active."
                    },
                    {
                        "in": "formData",
                        "name": "status_glossary",
                        "type": "string",
                        "description": "Info about status change. (ie: status_glossary is optional only if the degree:{status} is said to be 1).",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/degrees/delete": {
            "post": {
                "tags": ["educations"],
                "summary": "Delete a education degree. (Admin)",
                "description": "This will delete a single or set of education degree.",
                "operationId": "educationDegreeDelete",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "ids",
                    "type": "array",
                    "collectionFormat": "multi",
                    "items": { "type": "number" },
                    "description": "Ids of the education degree.",
                    "required": true
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/institutions/create": {
            "post": {
                "tags": ["educations"],
                "summary": "Create a education institution. (Admin)",
                "description": "This will create a new education institution.",
                "operationId": "educationInstitutionCreate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the education institution."
                    },
                    {
                        "in": "formData",
                        "name": "address",
                        "type": "string",
                        "required": true,
                        "description": "Address of the education institution."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the education institution."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/institutions/list": {
            "get": {
                "tags": ["educations"],
                "summary": "List education institutions.",
                "description": "This will list all education institutions based on the input params.",
                "operationId": "educationInstitutionList",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "query",
                        "name": "page",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Page number of the education institutions list. (ie: The page number will be 1 by default)."
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "type": "string",
                        "required": false,
                        "description": "Sorting order of the individual attribute in education institutions list. (ie: Have to be a comma separated string) (eg: [attribute_name].asc,[attribute_name].desc)."
                    },
                    {
                        "in": "query",
                        "name": "limit",
                        "type": "number",
                        "minimum": 1,
                        "required": false,
                        "description": "Limit of the education institutions list. (ie: The limit will be 10 by default)."
                    },
                    {
                        "in": "query",
                        "name": "search",
                        "type": "string",
                        "required": false,
                        "description": "Filters the education institutions list by the attribute name."
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": false,
                        "description": "Status of the education institutions list. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active. (ie: By default the list contains both active and inActive item.)"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/institutions/view/{id}": {
            "get": {
                "tags": ["educations"],
                "summary": "View a education institution.",
                "description": "This will retrieve a single education institution details.",
                "operationId": "educationInstitutionView",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "path",
                    "name": "id",
                    "type": "string",
                    "description": "Id of the education institution.",
                    "required": true
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/institutions/update/{id}": {
            "post": {
                "tags": ["educations"],
                "summary": "Update a education institution. (Admin)",
                "description": "This will update a single education institution details.",
                "operationId": "educationInstitutionUpdate",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the education institution.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "name",
                        "type": "string",
                        "required": true,
                        "description": "Name of the education institution."
                    },
                    {
                        "in": "formData",
                        "name": "address",
                        "type": "string",
                        "required": true,
                        "description": "Address of the education institution."
                    },
                    {
                        "in": "formData",
                        "name": "description",
                        "type": "string",
                        "required": false,
                        "description": "Description of the education institution."
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/institutions/change-status/{id}": {
            "post": {
                "tags": ["educations"],
                "summary": "Change status of a education institution. (Admin)",
                "description": "This will change status of a specific education institution.",
                "operationId": "educationInstitutionChange-status",
                "produces": ["application/json"],
                "parameters": [{
                        "in": "path",
                        "name": "id",
                        "type": "string",
                        "description": "Id of the education institution.",
                        "required": true
                    },
                    {
                        "in": "formData",
                        "name": "status",
                        "type": "number",
                        "enum": [0, 1],
                        "required": true,
                        "description": "Status of the education institution. Status can be either 0 or 1. Here 0 represent inActive and 1 represent active."
                    },
                    {
                        "in": "formData",
                        "name": "status_glossary",
                        "type": "string",
                        "description": "Info about status change. (ie: status_glossary is optional only if the institution:{status} is said to be 1).",
                        "required": false
                    }
                ],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/educations/institutions/delete": {
            "post": {
                "tags": ["educations"],
                "summary": "Delete a education institution. (Admin)",
                "description": "This will delete a single or set of education institution.",
                "operationId": "educationInstitutionDelete",
                "produces": ["application/json"],
                "parameters": [{
                    "in": "formData",
                    "name": "ids",
                    "type": "array",
                    "collectionFormat": "multi",
                    "items": { "type": "number" },
                    "description": "Ids of the education institution.",
                    "required": true
                }],
                "security": [{
                    "AccessToken": []
                }],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "PasswordOauth2": {
            "type": "oauth2",
            "tokenUrl": "http://localhost:1337/oauth/token",
            "flow": "password"
        },
        "AccessToken": {
            "type": "apiKey",
            "in": "query",
            "name": "access_token"
        }
    },
    "definitions": {

    }
}